@use '../../assets/style/utils' as u;
@use '../../assets/style/animations' as a;

@keyframes scale-breathe {
    100% { transform: scale(1.5); }
}

@mixin loader-layer($size: 10rem, $direction: 'right') {
    $rotation: a.rotate-right(1s);

    @if $direction == 'left' {
        $rotation: a.rotate-left(1s);
    }

    width: $size;
    height: $size;
    border: 1rem solid var(--main-color);
    border-radius: 50%;
    animation: a.breathe(.4s), $rotation;

    @include u.absolute-center($size);

    &::before {
        $w: $size / 2;
        $h: $size + 2rem;

        content: '';
        position: absolute;
        top: -1rem;
        left: calc(50% - #{$w / 2});
        width: $w;
        height: $size;
        background: var(--page-background-color);
    }
}

*, *::before, *::after { box-sizing: border-box; }

:host {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
    width: 100%;
    height: 100vh;
    background: var(--page-background-color);
    transition: opacity 1s;
}

:host(.out) {
    opacity: 0;
}

.container {
    position: absolute;
    width: 100%;
    top: calc(50% - 5rem);
}

.loader {
    $size: 10rem;
    position: relative;
    width: $size;
    height: $size;
    margin: auto;
}

.outer {
    @include loader-layer(10rem, 'right');
}

.inner {
    @include loader-layer(6rem, 'left')
}

.messages {
    padding: 0;
    list-style: none;
    font-size: 1.8rem;
    text-align: center;

    li {
        margin-bottom: 1rem;
    }

    @for $i from 1 through 3 {
        $duration: .6s;
        $delay: ($i - 1) * $duration / 3;

        li:nth-of-type(#{$i}n) span {
            animation: a.breathe($duration, $delay);
        }
    }
}

.vanish {
    opacity: 0;
    transform: translateX(10rem);
    transition: opacity .4s, transform .4s;
}